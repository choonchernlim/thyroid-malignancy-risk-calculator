var app = function () {
    var b = 1, g = $( "#prevBtn" ), h = $( "#nextBtn" ), s = $( ".user-progress" ), t = $( ".user-screen" ), u = $( ".form" ), k = $( "#user-risk-text" ), l = $( "input:radio[name=user-risk-radio]" ), v = $( "input:radio[name=us-fna-radio]" ), r = $( "#computed-diagram" ), w = $( "#computed-value" ), x = $( "#malignancy-count-text" ), y = $( "#non-malignancy-count-text" ), e = null, p = null, z = function () {
        var a = [];
        a.nonDiagnostic = {estimate : .515, lower97ci : .336, upper95ci : .791};
        a.benign = {estimate : .093, lower97ci : .063, upper95ci : .139};
        a.aus = {
            estimate  : .405,
            lower97ci : .228, upper95ci : .719
        };
        a.suspiciousForFollicularNeoplasm = {estimate : .608, lower97ci : .365, upper95ci : 1.01};
        a.suspiciousForMalignancy = {estimate : 8.35, lower97ci : 3.63, upper95ci : 19.23};
        a.malignant = {estimate : 196.77, lower97ci : 67.99, upper95ci : 569.51};
        return {
            compute : function ( b, c ) {
                var d = a[c], f = b / (1 - b), e = f * d.estimate, m = f * d.lower97ci, d = f * d.upper95ci;
                return {
                    preTestOdds                 : f,
                    postTestOddsEstimate        : e,
                    postTestProbabilityEstimate : e / (1 + e) * 100,
                    postTestOddsLower           : m,
                    postTestProbabilityLower    : m / (1 + m) * 100,
                    postTestOddsHigher          : d,
                    postTestProbabilityHigher   : d / (1 + d) * 100
                }
            }
        }
    }(), q = function () {
        s.addClass( "grey-text text-lighten-1" );
        $( ".user-progress-" + b ).removeClass( "grey-text text-lighten-1" ).addClass( "blue-grey-text" );
        t.addClass( "hide" );
        $( ".user-screen-" + b ).removeClass( "hide" );
        1 === b ? g.addClass( "hide" ) : g.removeClass( "hide" );
        3 === b ? h.addClass( "hide" ) : h.removeClass( "hide" )
    }, A = function () {
        k.focus( function () {
            l.prop( "checked", !1 )
        } ).change( function () {
            var a = $( this ).val(), b = !1, c = null;
            /^\d{1,3}$/.test( a ) && (c = parseInt( a ), 1 <= c && 100 >= c && (b = !0));
            b ?
                ($( this ).removeClass( "invalid" ).addClass( "valid" ), e = c / 100) :
                ($( this ).removeClass( "valid" ).addClass( "invalid" ), e = null)
        } );
        l.change( function () {
            e = $( this ).val();
            k.val( "" )
        } )
    }, B = function () {
        v.change( function () {
            p = $( this ).val()
        } )
    };
    return {
        startCalculator : function () {
            g.click( function () {
                b--;
                q()
            } );
            h.click( function () {
                var a = null;
                if ( 1 === b ) {
                    e ? B() : a = "Please specify a valid value first.";
                }
                else if ( 2 === b ) {
                    if ( p ) {
                        var g = 0, c = "", c = z.compute( e,
                                p ), d = Math.round( c.postTestProbabilityEstimate ), f = 100 -
                                                                                          d, h = Math.round( c.postTestProbabilityLower ),
                            m = Math.round( c.postTestProbabilityHigher );
                        r.empty();
                        for ( var k = 0; 10 > k; ++k ) {
                            var n = $( '<div class="row center-align"  style="padding:0; margin: 0">' );
                            n.append( '<div class="col s1" style="padding:0; margin: 0;">&nbsp;</div>' );
                            for ( var l = 0; 10 > l; ++l ) {
                                c = g++ <
                                    d ?
                                    "red-text" :
                                    "teal-text", n.append( '<div class="col s1"  style="padding: 0; margin: 0;"><i class="flow-text mdi-social-person ' +
                                                           c +
                                                           '"></i></div>' );
                            }
                            n.append( '<div class="col s1" style="padding:0; margin: 0;">&nbsp;</div>' );
                            r.append( n )
                        }
                        x.text( d + " patient" + (1 !=
                                                  d ? "s" : "") + " with malignancy" );
                        y.text( f + " patient" + (1 != f ? "s" : "") + " without malignancy" );
                        w.text( d + " % ( " + h + " \u2013 " + m + " )" )
                    }
                    else {
                        a = "Please enter US-FNA result first.";
                    }
                }
                a ? Materialize.toast( a, 2E3 ) : (b++, q())
            } );
            $( window ).bind( "beforeunload", function () {
                u.trigger( "reset" )
            } );
            A();
            q()
        }, globalSetup  : function () {
            $( ".button-collapse" ).sideNav()
        }
    }
}();
app.globalSetup();
